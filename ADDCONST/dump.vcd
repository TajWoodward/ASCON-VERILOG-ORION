$date
	Fri Oct 17 19:48:21 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var wire 64 ! out [63:0] $end
$var reg 4 " a [3:0] $end
$var reg 4 # i [3:0] $end
$var reg 64 $ in [63:0] $end
$scope module u1 $end
$var wire 4 % a [3:0] $end
$var wire 4 & i [3:0] $end
$var wire 64 ' out [63:0] $end
$var wire 64 ( state2 [63:0] $end
$var wire 64 ) const [63:0] $end
$var wire 4 * I [3:0] $end
$scope module u1 $end
$var wire 4 + index [3:0] $end
$var reg 64 , out [63:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b101101 ,
b1101 +
b1101 *
b101101 )
b100100011010001010110011110001001101010111100110111101111 (
b100100011010001010110011110001001101010111100110111000010 '
b101 &
b100 %
b100100011010001010110011110001001101010111100110111101111 $
b101 #
b100 "
b100100011010001010110011110001001101010111100110111000010 !
$end
#100000
